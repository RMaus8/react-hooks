{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/UI/ErrorModal.js","hooks/http.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","context/auth-context.js","components/Auth.js","App.js","index.js"],"names":["Card","props","className","children","LoadingIndicator","IngredientForm","React","memo","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","console","log","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","value","onChange","target","loading","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","ErrorModal","Fragment","onClose","initialState","error","data","extra","identifier","httpReducer","curHttpState","action","responseData","errorMessage","Error","useHttp","useReducer","httpState","dispatchHttp","clear","useCallback","sendRequest","url","method","body","reqExtra","reqIdentifer","fetch","headers","then","response","json","catch","isLoading","Search","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","clearTimeout","loadedIngredients","push","ref","ingredientReducer","currentIngredients","ingredient","filter","ing","Ingredients","userIngredients","dispatch","name","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","JSON","stringify","removeIngredientHandler","ingredientId","ingredientList","useMemo","AuthContext","createContext","isAuth","login","AuthContextProvider","isAuthenticated","setIsAuthenticated","Provider","Auth","authContext","useContext","App","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.041abb93.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  console.log('RENDERING INGREDIENT FORM');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({ title: enteredTitle, amount: enteredAmount });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={event => {\n                setEnteredTitle(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={event => {\n                setEnteredAmount(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIndicator />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  console.log('RENDERING INGREDIENTLIST');\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import { useReducer, useCallback } from 'react';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null,\n  extra: null,\n  identifier: null\n};\n\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        extra: null,\n        identifier: action.identifier\n      };\n    case 'RESPONSE':\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData,\n        extra: action.extra\n      };\n    case 'ERROR':\n      return { loading: false, error: action.errorMessage };\n    case 'CLEAR':\n      return initialState;\n    default:\n      throw new Error('Should not be reached!');\n  }\n};\n\nconst useHttp = () => {\n  const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\n\n  const clear = useCallback(() => dispatchHttp({ type: 'CLEAR' }), []);\n\n  const sendRequest = useCallback(\n    (url, method, body, reqExtra, reqIdentifer) => {\n      dispatchHttp({ type: 'SEND', identifier: reqIdentifer });\n      fetch(url, {\n        method: method,\n        body: body,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(responseData => {\n          dispatchHttp({\n            type: 'RESPONSE',\n            responseData: responseData,\n            extra: reqExtra\n          });\n        })\n        .catch(error => {\n          dispatchHttp({\n            type: 'ERROR',\n            errorMessage: 'Something went wrong!'\n          });\n        });\n    },\n    []\n  );\n\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    reqExtra: httpState.extra,\n    reqIdentifer: httpState.identifier,\n    clear: clear\n  };\n};\n\nexport default useHttp;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport ErrorModal from '../UI/ErrorModal';\nimport useHttp from '../../hooks/http';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const { isLoading, data, error, sendRequest, clear } = useHttp();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query =\n          enteredFilter.length === 0\n            ? ''\n            : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        sendRequest(\n          'https://react-hooks-update.firebaseio.com/ingredients.json' + query,\n          'GET'\n        );\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, inputRef, sendRequest]);\n\n  useEffect(() => {\n    if (!isLoading && !error && data) {\n      const loadedIngredients = [];\n      for (const key in data) {\n        loadedIngredients.push({\n          id: key,\n          title: data[key].title,\n          amount: data[key].amount\n        });\n      }\n      onLoadIngredients(loadedIngredients);\n    }\n  }, [data, isLoading, error, onLoadIngredients]);\n\n  return (\n    <section className=\"search\">\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          {isLoading && <span>Loading...</span>}\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => setEnteredFilter(event.target.value)}\n          />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useReducer, useEffect, useCallback, useMemo } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\nimport useHttp from '../../hooks/http';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    reqExtra,\n    reqIdentifer,\n    clear\n  } = useHttp();\n\n  useEffect(() => {\n    if (!isLoading && !error && reqIdentifer === 'REMOVE_INGREDIENT') {\n      dispatch({ type: 'DELETE', id: reqExtra });\n    } else if (!isLoading && !error && reqIdentifer === 'ADD_INGREDIENT') {\n      dispatch({\n        type: 'ADD',\n        ingredient: { id: data.name, ...reqExtra }\n      });\n    }\n  }, [data, reqExtra, reqIdentifer, isLoading, error]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    dispatch({ type: 'SET', ingredients: filteredIngredients });\n  }, []);\n\n  const addIngredientHandler = useCallback(ingredient => {\n    sendRequest(\n      'https://react-hooks-update.firebaseio.com/ingredients.json',\n      'POST',\n      JSON.stringify(ingredient),\n      ingredient,\n      'ADD_INGREDIENT'\n    );\n  }, [sendRequest]);\n\n  const removeIngredientHandler = useCallback(\n    ingredientId => {\n      sendRequest(\n        `https://react-hooks-update.firebaseio.com/ingredients/${ingredientId}.json`,\n        'DELETE',\n        null,\n        ingredientId,\n        'REMOVE_INGREDIENT'\n      );\n    },\n    [sendRequest]\n  );\n\n  const ingredientList = useMemo(() => {\n    return (\n      <IngredientList\n        ingredients={userIngredients}\n        onRemoveItem={removeIngredientHandler}\n      />\n    );\n  }, [userIngredients, removeIngredientHandler]);\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n\n      <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={isLoading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","import React, { useState } from 'react';\n\nexport const AuthContext = React.createContext({\n  isAuth: false,\n  login: () => {}\n});\n\nconst AuthContextProvider = props => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginHandler = () => {\n    setIsAuthenticated(true);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ login: loginHandler, isAuth: isAuthenticated }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;","import React, { useContext } from 'react';\n\nimport Card from './UI/Card';\nimport { AuthContext } from '../context/auth-context';\nimport './Auth.css';\n\nconst Auth = props => {\n  const authContext = useContext(AuthContext);\n\n  const loginHandler = () => {\n    authContext.login();\n  };\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={loginHandler}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useContext } from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport { AuthContext } from './context/auth-context';\n\nconst App = props => {\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />;\n  if (authContext.isAuth) {\n    content = <Ingredients />;\n  }\n\n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport AuthContextProvider from './context/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}